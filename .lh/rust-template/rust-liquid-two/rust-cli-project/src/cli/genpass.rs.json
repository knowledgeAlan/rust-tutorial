{
    "sourceFile": "rust-template/rust-liquid-two/rust-cli-project/src/cli/genpass.rs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1718354664643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718354762353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,21 @@\n use crate::CmdExector;\n use clap::Parser;\n-use zxcvbn::zxcvbn;\n\\ No newline at end of file\n+use zxcvbn::zxcvbn;\n+\n+#[derive(Debug,Parser)]\n+\n+pub struct GenPassOpts {\n+\n+\n+    pub length: u8,\n+\n+    pub uppercase: bool,\n+\n+\n+    pub lowercase: bool,\n+\n+\n+    pub number: bool,\n+\n+    pub symbol: bool,\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718354857881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,20 @@\n #[derive(Debug,Parser)]\n \n pub struct GenPassOpts {\n \n-\n+    #[arg(short,long,default_value_t=16)]\n     pub length: u8,\n \n+    #[arg(long,default_value_t=true)]\n     pub uppercase: bool,\n \n-\n+    #[arg(long,default_value_t=true)]\n     pub lowercase: bool,\n \n \n+    #[arg(long,default_value_t=true)]\n     pub number: bool,\n \n+    #[arg(long,default_value_t=true)]\n     pub symbol: bool,\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718354922521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,13 @@\n     pub number: bool,\n \n     #[arg(long,default_value_t=true)]\n     pub symbol: bool,\n-}\n\\ No newline at end of file\n+}\n+\n+\n+impl CmdExector for GenPassOpts {\n+\n+    async fn execute(self) -> anyhow::Result<()>{\n+\n+    }\n+}\n"
                },
                {
                    "date": 1718355056183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,6 +27,12 @@\n impl CmdExector for GenPassOpts {\n \n     async fn execute(self) -> anyhow::Result<()>{\n \n+         let ret:String = crate::process_genpass(self.length, self.uppercase,self.lowercase,self.number,self.symbol)?;\n+\n+         println!(\"{}\",ret );\n+\n+        let estimate:Entropy = zxcvbn(&ret,&[]);\n+         Ok(());\n     }\n }\n"
                },
                {
                    "date": 1718355095797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,7 +32,8 @@\n \n          println!(\"{}\",ret );\n \n         let estimate:Entropy = zxcvbn(&ret,&[]);\n+        eprintln!(\"Password strength:{}\",estimate.score);\n          Ok(());\n     }\n }\n"
                }
            ],
            "date": 1718354664643,
            "name": "Commit-0",
            "content": "use crate::CmdExector;\nuse clap::Parser;\nuse zxcvbn::zxcvbn;"
        }
    ]
}